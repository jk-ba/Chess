@startuml
class ColorExtensions <<static>> {
    + {static} Inverted(color:Color) : Color
}
class IllegalMoveException {
    + IllegalMoveException(message:string)
}
Exception <|-- IllegalMoveException
class Pos <<struct>> {
    + r : int
    + c : int
    + Pos(r:int, c:int)
    + {static} Parse(text:string) : Pos
}
class Board {
    + Board()
    + Check : bool <<get>>
    + CheckMate : bool <<get>>
    + Move(from:Pos, to:Pos) : Board
    + PrintBoard() : void
}
class "Dictionary`2"<T1,T2> {
}
Board --> "PlayerColor" Color
Board --> "Cells<Pos,Piece?>" "Dictionary`2"
enum Color {
    White,
    Black,
}
enum PieceType {
    Pawn,
    Knight,
    Bishop,
    Rook,
    Queen,
    King,
}
class Piece <<struct>> {
    + Piece(type:PieceType, color:Color)
    + <<override>> ToString() : string
}
Piece --> "Type" PieceType
Piece --> "Color" Color
class MoveExtensions <<static>> {
}
class Move <<struct>> {
    + Move(from:Pos, to:Pos)
}
Move --> "From" Pos
Move --> "To" Pos
class Program <<static>> {
    + {static} Main(args:string[]) : void
}
@enduml
